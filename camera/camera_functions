#!/bin/bash


function SETUP {
    #
    # setup camera settings 
    #

    # to be done

    echo 0
    
    }



function INTERVAL {
    local T1=$1
    local T2=$2
    local INTERVAL_SECONDS=$3

    
    NOW=$(date +%s.%N)
    WAIT=$(echo "($T1 - $NOW)" | bc -l)

    if (( $(echo "$WAIT > 0" | bc -l) ));
    then
	echo "Sleep for $WAIT seconds..." 
	sleep $WAIT
    else
	sleep 0
    fi

    NOW=$(date +%s.%N)
    LEFTOVER=$(echo "($T2 - $NOW)" | bc -l)

    echo "$(date -Ins)" "Interval started"
    
    while (( $(echo "$LEFTOVER > 0" | bc -l) ))
    do

	CAPTURE_DURATION_T1=$(date +%s.%N)

	if [[ $DRY_RUN -eq 1 ]];
	then
	    echo "Capture" "$(date -Ins)"
	    sleep 2.3
	elif [[ $DRY_RUN -eq 0 ]];
	then
	    # this line is camera-dependent
	    # following is for Canon
	    gphoto2 --capture-image
	fi

	CAPTURE_DURATION_T2=$(date +%s.%N)


    	CAPTURE_DURATION=$(echo "$CAPTURE_DURATION_T2 - $CAPTURE_DURATION_T1" | bc -l)

	INTERVAL_LEFTOVER=$(echo "$INTERVAL_SECONDS - $CAPTURE_DURATION" | bc -l)
	
	if (( $(echo "$INTERVAL_LEFTOVER > 0" | bc -l) ));
	then
	    sleep $INTERVAL_LEFTOVER
	else
	    sleep 0
	fi
	
	NOW=$(date +%s.%N)
	LEFTOVER=$(echo "($T2 - $NOW)" | bc -l)
	

    done

    echo "$(date -Ins)" "Interval ended"
    }

function BURST {
    #
    # runs continuous shooting in the interval T1-T2
    #
    local T1=$1
    local T2=$2
    local SHUTTER_SPEED=$3

    gphoto2 --set-config aeb="0"
    gphoto2 --set-config shutterspeed="$SHUTTER_SPEED"

    NOW=$(date +%s.%N)
    WAIT=$(echo "($T1 - $NOW)" | bc -l)

    BRACKET_DURATION=0
    #echo $WAIT "wait"
    
    if (( $(echo "$WAIT > 0" | bc -l) ));
    then
	sleep $WAIT
    else
	sleep 0
    fi

    NOW=$(date +%s.%N)
    BURST_DURATION=$(echo "($T2 - $NOW)" | bc -l)

    BURST_DURATION_MS=$(echo "($BURST_DURATION*1000)" | bc -l)
    
    
    echo $BURST_DURATION "burst duration"
    
    if (( $(echo "$BURST_DURATION > 0" | bc -l) ));
    then
	echo "$(date -Ins)" "burst started"

	if [[ $DRY_RUN -eq 1 ]];
	then
	    sleep $BURST_DURATION
	elif [[ $DRY_RUN -eq 0 ]];
	then
	    # this line is camera-dependent
	    # following is for Canon
	    gphoto2 --set-config eosremoterelease=5 --wait-event "$BURST_DURATION_MS"ms --set-config eosremoterelease=4 > /dev/null 2>&1
	fi


	echo "$(date -Ins)" "burst ended"
    else
	echo "$(date -Ins)" "burst started"
	sleep 0
	echo "$(date -Ins)" "burst ended"
    fi

}


function AEB {
    #
    # runs Auto Exposure Bracketing sequences continuously in the interval T1-T1 
    #
    
    local T1=$1
    #
    # The moment of the beginning of shooting.
    # If the actual start of the program later than T1 then capturing starts immediately.
    # If the actual start of the program later than T2 then capturing stops immediately.
    #

    local T2=$2
    #
    # The moment of the end of shooting. The actual end of shooting might be later than T2 up to
    # BRACKET_DURATION value if MODE = LTC.
    #

    local MID_SHUTTER_SPEED=$3
    #
    # SHUTTER_SPEED of the middle shot in bracketed sequence.
    #

    local STEP=$4
    #
    # Difference in exposure values between (i+1)-th and i-th shot in bracketed sequence.
    # STEP = log2( SHUTTER_SPEED_(i+1) / SHUTTER_SPEED_i )  
    #

    local N=$5
    #
    # Number of frames in bracketed sequence. N depends on camera model 
    # 

    local FPS=$6
    #
    # Frames Per Second rate in continious shooting mode.
    # Usually, FPS can be found in Users's manual for camera.
    # Otherwise, FPS should be measured experimentally.
    #

    local MODE=$7
    #
    # LTC: Let To Complete bracket sequence if remaining time (T2-NOW) less than BRACKET_DURATION.
    #
    # ROT: Right On Time. Capture completes if remaining time (T2-NOW) less than BRACKET_DURATION.
    #
    # BRACKET_DURATION equals ESTIMATED_BRACKET_DURATION before first bracket. During first bracket
    # and following real BRACKET_DURATION value measured.
    #  

    
    #if [[ [ "$MODE" != "LTC" ] && [ "$MODE" != "ROT" ] ]];
    #then
    #    echo "WARNING! MODE="$MODE" Parameter MODE must be either ROT or LTC. The parameter is automatically set to ROT."
    #	MODE="ROT"
    #fi 

    n=$(( $N/2 ))
    local MAX_SHUTTER_SPEED=$(echo "$MID_SHUTTER_SPEED*e($STEP*$n*l(2))" | bc -l) 

    local ESTIMATED_BRACKET_DURATION_MS=$(echo "(($MAX_SHUTTER_SPEED*(1 - (1/e($STEP*l(2)))^$N))/(1 - 1/e($STEP*l(2))) + $N/$FPS)*1000" | bc -l | awk '{print ($0-int($0)>0)?int($0)+1:int($0)}')

    local ESTIMATED_BRACKET_DURATION=$(echo "$ESTIMATED_BRACKET_DURATION_MS/1000" | bc -l)


    if [[ $DRY_RUN -eq 1 ]];
    then
	:
    elif [[ $DRY_RUN -eq 0 ]];
    then
	# these lines is camera-dependent
	# following is for Canon

	#gphoto2 --set-config aeb="$STEP"
	gphoto2 --set-config aeb=3
	gphoto2 --set-config shutterspeed="$MID_SHUTTER_SPEED"
    fi
    
    NOW=$(date +%s.%N)
    WAIT=$(echo "($T1 - $NOW)" | bc -l)

    #echo $WAIT
    
    if (( $(echo "$WAIT > 0" | bc -l) ));
    then
	sleep $WAIT
    else
	sleep 0
    fi

    NOW=$(date +%s.%N)
    LEFTOVER=$(echo "$T2 - $NOW" | bc -l)

    if [ "$MODE" = "ROT" ];
    then
    	BRACKET_DURATION=$ESTIMATED_BRACKET_DURATION
    elif [ "$MODE" = "LTC" ];
    then
    	BRACKET_DURATION=0
    fi

    BRACKET_DURATION=0

    while (( $(echo "$LEFTOVER > $BRACKET_DURATION" | bc -l) ))
    do
    	echo $(date -Ins) "AEB" $MID_SHUTTER_SPEED $LEFTOVER
	
	BRACKET_DURATION_T1=$(date +%s.%N)

	if [[ $DRY_RUN -eq 1 ]];
	then
	    sleep $ESTIMATED_BRACKET_DURATION
	elif [[ $DRY_RUN -eq 0 ]];
	then
	    # this line is camera-dependent
	    # following is for Canon
	    gphoto2 --set-config eosremoterelease=5 --wait-event "$ESTIMATED_BRACKET_DURATION_MS"ms --set-config eosremoterelease=4 > /dev/null 2>&1
	fi

	BRACKET_DURATION_T2=$(date +%s.%N)

	if [ "$MODE" = "ROT" ];
	then
	    BRACKET_DURATION=$(echo "$BRACKET_DURATION_T2 - $BRACKET_DURATION_T1" | bc -l)
	elif [ "$MODE" = "LTC" ];
	then
    	    BRACKET_DURATION=0
	fi
	
	NOW=$(date +%s.%N)
    	LEFTOVER=$(echo "$T2 - $NOW" | bc -l)
    done

}


